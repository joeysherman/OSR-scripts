program updater;
{$i Reflection/Reflection.Simba}

const scriptPage = 'https://raw.githubusercontent.com/ineedbots/Scripts/master/%5BReflection%5D%20ineedbot''s%20AIO%20Woodcutter.simba';
      fScriptPage = 'https://raw.githubusercontent.com/ineedbots/Scripts/master/%5BReflection%5D%20ineedbot''s%20functions.simba';

var FileNew, script, fScript : string;
    ThisFile : integer;

begin
  Reflect.Logger.Init('Reflection');

  if DirectoryExists(ScriptPath + '.git\') then
    Reflect.Logger.Status('Git repository detected, not updating script.')
  else begin
    script := TReflectionMisc.GetPage(scriptPage);
    fScript := TReflectionMisc.GetPage(fscriptPage);

    FileNew := ScriptPath + '[Reflection] ineedbot''s functions.simba';
    ThisFile := Rewritefile(FileNew, true);
    try
        WriteFileString(ThisFile, fScript);
      except
        begin
          Reflect.Logger.Error('Failed writing to: '+FileNew, []);
          CloseFile(ThisFile);
          exit;
        end;
      end;
      CloseFile(ThisFile);
      Reflect.Logger.Status('Successfully downloaded new functions to '+FileNew+'.', []);

    FileNew := ScriptPath + '[Reflection] ineedbot''s AIO Woodcutter.simba';
    ThisFile := Rewritefile(FileNew, true);
    try
        WriteFileString(ThisFile, script);
      except
        begin
          Reflect.Logger.Error('Failed writing to: '+FileNew, []);
          CloseFile(ThisFile);
          exit;
        end;
      end;
      CloseFile(ThisFile);
      Reflect.Logger.Status('Successfully downloaded new script to '+FileNew+'. Please open this script.', []);
  end;

  if DirectoryExists(IncludePath + 'Reflection\.git\') then
    Reflect.Logger.Status('Git repository detected, not updating include.')
  else
    Reflect.Internals.UpdateAll;
end.
